{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nconst useFetch = function (url) {\n  _s();\n  let method = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"GET\";\n  const [data, setData] = useState(null);\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [options, setOptions] = useState(null);\n  const postData = data => {\n    setOptions({\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(data)\n    });\n  };\n  useEffect(() => {\n    //promise\n    // fetch(url)\n    // .then(res => res.json())\n    // .then(data => setData(data))\n\n    //async - await\n    const fetchData = async options => {\n      setIsLoading(true);\n      try {\n        const res = await fetch(url, {\n          ...options\n        });\n        if (!res.ok) {\n          throw new Error(res.statusText);\n        }\n        const data = await res.json();\n        setIsLoading(false);\n        setData(data); // buradaki data ile usetState' e tanımlanan data aynı değil\n      } catch (err) {\n        setIsLoading(false);\n        setError(err.message);\n        console.log(err.message);\n      }\n    };\n    if (method === \"GET\") {\n      fetchData();\n    }\n    if (method === \"POST\" && options) {\n      fetchData(options);\n    }\n  }, [url, options, method]);\n  return {\n    data,\n    isLoading,\n    error,\n    postData\n  };\n};\n_s(useFetch, \"9YHTEPcLjUzYQR1/NzymB2iA+ss=\");\nexport default useFetch;","map":{"version":3,"names":["useState","useEffect","useFetch","url","_s","method","arguments","length","undefined","data","setData","error","setError","isLoading","setIsLoading","options","setOptions","postData","headers","body","JSON","stringify","fetchData","res","fetch","ok","Error","statusText","json","err","message","console","log"],"sources":["C:/Users/necdet/Desktop/React/yemek-tarifleri/src/hooks/useFetch.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\n\r\nconst useFetch = (url, method=\"GET\") => {\r\n    const [data, setData] = useState(null);\r\n    const [error, setError] = useState(null);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [options, setOptions] = useState(null)\r\n\r\n    const postData = (data) => {\r\n        setOptions({\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify(data)\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        //promise\r\n        // fetch(url)\r\n        // .then(res => res.json())\r\n        // .then(data => setData(data))\r\n\r\n        //async - await\r\n        const fetchData = async (options) => {\r\n            setIsLoading(true);\r\n\r\n            try {\r\n                const res = await fetch(url, {...options});\r\n                if(!res.ok){\r\n                    throw new Error(res.statusText);\r\n                }\r\n                const data = await res.json();\r\n                setIsLoading(false);\r\n                setData(data); // buradaki data ile usetState' e tanımlanan data aynı değil\r\n            }\r\n            catch(err) {\r\n                setIsLoading(false);\r\n                setError(err.message);\r\n                console.log(err.message);\r\n            }\r\n        }\r\n\r\n        if(method === \"GET\") {\r\n            fetchData();\r\n        }\r\n\r\n        if(method === \"POST\" && options) {\r\n            fetchData(options);\r\n        }\r\n\r\n\r\n    }, [url, options, method])\r\n\r\n    return {\r\n        data, isLoading, error, postData\r\n    }\r\n}\r\n\r\nexport default useFetch;"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAE3C,MAAMC,QAAQ,GAAG,SAAAA,CAACC,GAAG,EAAmB;EAAAC,EAAA;EAAA,IAAjBC,MAAM,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAC,KAAK;EAC/B,MAAM,CAACG,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACa,SAAS,EAAEC,YAAY,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACe,OAAO,EAAEC,UAAU,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EAE5C,MAAMiB,QAAQ,GAAIR,IAAI,IAAK;IACvBO,UAAU,CAAC;MACPX,MAAM,EAAE,MAAM;MACda,OAAO,EAAE;QACL,cAAc,EAAE;MACpB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACZ,IAAI;IAC7B,CAAC,CAAC;EACN,CAAC;EAEDR,SAAS,CAAC,MAAM;IACZ;IACA;IACA;IACA;;IAEA;IACA,MAAMqB,SAAS,GAAG,MAAOP,OAAO,IAAK;MACjCD,YAAY,CAAC,IAAI,CAAC;MAElB,IAAI;QACA,MAAMS,GAAG,GAAG,MAAMC,KAAK,CAACrB,GAAG,EAAE;UAAC,GAAGY;QAAO,CAAC,CAAC;QAC1C,IAAG,CAACQ,GAAG,CAACE,EAAE,EAAC;UACP,MAAM,IAAIC,KAAK,CAACH,GAAG,CAACI,UAAU,CAAC;QACnC;QACA,MAAMlB,IAAI,GAAG,MAAMc,GAAG,CAACK,IAAI,EAAE;QAC7Bd,YAAY,CAAC,KAAK,CAAC;QACnBJ,OAAO,CAACD,IAAI,CAAC,CAAC,CAAC;MACnB,CAAC,CACD,OAAMoB,GAAG,EAAE;QACPf,YAAY,CAAC,KAAK,CAAC;QACnBF,QAAQ,CAACiB,GAAG,CAACC,OAAO,CAAC;QACrBC,OAAO,CAACC,GAAG,CAACH,GAAG,CAACC,OAAO,CAAC;MAC5B;IACJ,CAAC;IAED,IAAGzB,MAAM,KAAK,KAAK,EAAE;MACjBiB,SAAS,EAAE;IACf;IAEA,IAAGjB,MAAM,KAAK,MAAM,IAAIU,OAAO,EAAE;MAC7BO,SAAS,CAACP,OAAO,CAAC;IACtB;EAGJ,CAAC,EAAE,CAACZ,GAAG,EAAEY,OAAO,EAAEV,MAAM,CAAC,CAAC;EAE1B,OAAO;IACHI,IAAI;IAAEI,SAAS;IAAEF,KAAK;IAAEM;EAC5B,CAAC;AACL,CAAC;AAAAb,EAAA,CAxDKF,QAAQ;AA0Dd,eAAeA,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}